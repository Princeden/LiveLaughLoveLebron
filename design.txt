LiveLaughLoveLebron (Pd. 5)
By : Princeden Hom, Kyle Lee, Sascha Gordon-Zolov, Nafiyu Murtaza
TARGET SHIP DATE: 2025-1-15


Description: Poker
As avid enthusiasts of both poker and (responsible) gambling, we plan to create a website that combines both. Players should be able to have an account that will allow them to play games of poker, track a money balance, and their poker stats. Players will begin with a set balance. If a player completely runs out of money, they can no longer play any games. If they run out of money they should not be able to play. Multiple players will be able to play on the same local machine by requiring an account specific password to see their cards. Turns rotate, with only one player being in control at any given time. After the poker game itself is in working condition, we may add a feature where users can buy cosmetics or fun features with their hard earned poker income.
The game of choice will be Texas hold 'em, a popular modern variation of poker. Each player is dealt two cards, and over time 5 cards will appear on the table. Once all 5 cards are on the table, and if the remaining players reveal the cards, the winner is the player who can make the best five-card hand out of their seven total cards. (Five shared between all players, two private to each player.)


Components and Interactions:
Frontend: CSS - Tailwind. 
* Home page, see poker stats and the amount of money they have as well as reroute to other pages
* Game page, will render one of two ways 
   * If there is no current game: user will be able to enter usernames and passwords to create a poker game
   * If there is a current game: user will be able to participate in the game if they were entered as a user when creating the game otherwise they will see an error (if time permits we will allow them to spectate a game)
* Settings, user should be able to change their display name and their display picture
Backend: 
* __init__.py
   * Run flask app, handle user information
* users.py
   * Contain functions to help access database information relating to user information as well as account balances
* Init_db.py
   * Code to initialize the tables for the database
* poker.py
   * Contain functions to help with poker game logic
   * Contains API calls to the cards api to retrieve data needed for games
* rewards.py (if time permits)
   * Contains api calls to pokemon and amiibo api to generate awards
   * Will also manage adding items to users collections 
Database: 
Users:
User_id
	Username
	Password
	Balance
	Last_Login
	#
	TEXT
	TEXT
	FLOAT
	DATE
	







* Users : Login/Register, be able to create and sign into account
   * User_id (int primary key)
   * Password (text)
   * Username (text)
   * Balance (float)
   * Last_Login (date)
Games:
Game_id
	User_1
	User_2
	User_3 
	…
	#
	#
	#
	#
	#
	







* Games: Table to track specific games and which users played in that game. An absolute maximum of ten players can play at a given table, and at least two players must be present to begin a game. (Users cannot play against the machine.) A user value will be 0 if there were not that many users. 
   * Game_id (int primary key)
   * User_1 (int)
   * User_2 (int)
   * User_3 (int)
   * User_4 (int)
   * User_5 (int)
   * …
Moves:
Game_id
	User_id
	Type
	Hand
	#
	#
	STRING
	STRING
	







* Moves: Table to track each move made in a game of poker
   * Game_id (int foreign key referencing games)
   * User_id (int foreign key referencing user)
   * Type (string) fold, call, all in, etc
   * Hand (string) cards held while making the move
APIs: 
* Card API 
   * Utilize card api to retrieve a random card with an image
* Amiibo API
   * Use the amiibo api to get amiibo data which could be used as a reward system
* PokéAPI
   * Pull images of pokemon to differentiate different players. Each player will be assigned a pokemon upon creating an account, but different profile pictures (more pokemon) can be bought for coins. 


User Features:
* Each player will earn some number of coins upon logging in each day to encourage more gambling by using the last login column of the users table
* If a player leaves a table players will lose a portion of their earnings as punishment. (This is how the casino makes money. The house always wins!)
* If a password is entered, and if it is the player’s turn, the player’s cards will only flip over if the player chooses to hover over their cards. Each player has a time limit for their turn. (However, this limit will be much higher than the average move speed.) Often, this only needs to be done once or twice a hand, so multiple players will be able to play easily on the same machine. (Though players will need to look away while their opponents cards are being flipped). 






























Component Interaction Map:


  





Site Map:
  





TASK ASSIGNMENTS




	Princeden
	Sascha
	Kyle
	Naf
	Flask setup and routing
	

	

	

	✔✔
	Javascript
	✔
	

	✔
	

	API integration
	

	✔
	✔
	

	Poker.py Logic
	✔
	✔
	

	

	HTML template creation and CSS styling
	

	✔
	✔
	

	Database setup and integration
	✔
	

	

	✔
	Testing and debugging
	✔
	✔
	✔
	✔
